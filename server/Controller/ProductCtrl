const asyncHandler = require('express-async-handler');
const slugify = require('slugify');
const Product = require('../Models/Products');
const Market = require('../Models/Market')
const Category = require('../Models/Category')
const Subcategory = require('../Models/Subcategory')
const SubSubcategory = require('../Models/SubSubcategory')

// @desc    Create a new product
// @route   POST /api/products
// @access  Public
const createProduct = asyncHandler(async (req, res) => {
  try {
    if (req.body.title) {
      req.body.slug = slugify(req.body.title);
    }
    const newProduct = await Product.create(req.body);
    res.status(201).json(newProduct);
  } catch (error) {
    res.status(400).json({ success: false, error: error.message });
  }
});

// @desc    Get all products
// @route   GET /api/products
// @access  Public
const getProducts = asyncHandler(async (req, res) => {
  const products = await Product.findAll();
  res.json(products);
});

// @desc    Get a single product by ID
// @route   GET /api/products/:id
// @access  Public
const getProductById = asyncHandler(async (req, res) => {
  const product = await Product.findByPk(req.params.id);
  if (product) {
    res.json(product);
  } else {
    res.status(404).json({ success: false, message: 'Product not found' });
  }
});

// @desc    Update a product
// @route   PUT /api/products/:id
// @access  Public
const updateProduct = asyncHandler(async (req, res) => {
  try {
    const product = await Product.findByPk(req.params.id);
    if (product) {
      if (req.body.title) {
        req.body.slug = slugify(req.body.title);
      }
      await product.update(req.body);
      res.json({ success: true, message: 'Product updated successfully' });
    } else {
      res.status(404).json({ success: false, message: 'Product not found' });
    }
  } catch (error) {
    res.status(400).json({ success: false, error: error.message });
  }
});

// @desc    Delete a product
// @route   DELETE /api/products/:id
// @access  Public
const deleteProduct = asyncHandler(async (req, res) => {
  const product = await Product.findByPk(req.params.id);
  if (product) {
    await product.destroy();
    res.json({ success: true, message: 'Product deleted successfully' });
  } else {
    res.status(404).json({ success: false, message: 'Product not found' });
  }
});
// Get a single market with its related categories, subcategories, subsubcategories, and products
const getAllMarkets = asyncHandler(async (req, res) => {
    const markets = await Market.findAll({
      include: [
        {
          model: Category,
          include: [
            {
              model: Subcategory,
              include: [
                {
                  model: SubSubcategory,
                  include: Product // Include products in subsubcategories
                },
                Product // Include products in subcategories
              ]
            },
            Product // Include products in categories
          ]
        }
      ]
    });
    res.json(markets);
    console.log(markets)
  });
  
  
module.exports = { createProduct, getProducts, getProductById, updateProduct, deleteProduct,getAllMarkets };
